# Importing Libraries
library(datarium)
#Importing Dataset
data("headache")
force(headache)
View(headache)
View(headache)
#Importing Dataset
headache<-data("headache")
#Importing Dataset
data("headache")
#Importing Dataset
headachelong<-read_excel("headachelong.xlsx")
# Importing Libraries
library(readxl)
#Importing Dataset
headachelong<-read_excel("headachelong.xlsx")
View(headachelong)
# Importing Libraries
library(readxl)
library(ez)
library(ggplot2)
library(multcomp)
library(nlme)
library(pastecs)
library(reshape2)
library(haven)
library(dplyr)
library(ggpubr)
library(rstatix)
#Importing Dataset
headachelong<-read_excel("headachelong.xlsx")
View(headachelong)
# Quantitative Variable - Descriptives
painscore<-headachelong$painscore #saving painscore to a variable
favstats(painscore)
# Importing Libraries
library(readxl)
library(ez)
library(ggplot2)
library(multcomp)
library(nlme)
library(pastecs)
library(reshape2)
library(haven)
library(dplyr)
library(ggpubr)
library(rstatix)
# Quantitative Variable - Descriptives
painscore<-headachelong$painscore #saving painscore to a variable
descriptives<-favstats(painscore)
library(mosaic)
# Quantitative Variable - Descriptives
painscore<-headachelong$painscore #saving painscore to a variable
descriptives<-favstats(painscore)
View(descriptives)
# Quantitative Variable - Descriptives
painscore<-headachelong$painscore #saving painscore to a variable
descriptives<-favstats(painscore)
descriptives$mean # shows mean
descriptives$sd # shows sd
# Quantitative Variable Pain Score Descriptives
skewness(painscore)
library(car)
library(moments)
# Quantitative Variable Pain Score Descriptives
skewness(painscore)
kurtosis(painscore)
ks.test(painscore,"pnorm")
# Quantitative Variable Pain Score Descriptives
skewness(painscore)
kurtosis(painscore)
ks.test(painscore,"pnorm")
hist(painscore)
# Quantitative Variable Pain Score Descriptives
skewness(painscore)
kurtosis(painscore)
ks.test(painscore,"pnorm")
hist(painscore)
# Quantitative Variable Pain Score Descriptives
skewness(painscore)
kurtosis(painscore)
ks.test(painscore,"pnorm")
hist(painscore)
jarque.test(painscore)
#Quantitative Variable - Pain Score
gf_boxplot(painscore~gender)
#Quantitative Variable - Pain Score
gf_boxplot(painscore~gender,data = "headachelong")
#Quantitative Variable - Pain Score
gf_boxplot(painscore~gender,data = "headachelong")
#Quantitative Variable - Pain Score
gf_boxplot(painscore~gender,data = headachelong)
#Quantitative Variable - Pain Score Descriptives
#Boxplots
gf_boxplot(painscore~gender,data = headachelong)
gf_boxplot(painscore~trmt,data=headachelong)
gf_boxplot(painscore~risk,data=headachelong)
?levenes.test()
levene.test()
?levene.test()
?levene.test
#Equal Variance Test
leveneTest(painscore)
#Equal Variance Test
leveneTest(painscore,group = gender,data = headachelong)
#Equal Variance Test
leveneTest(painscore,group = "gender",data = headachelong)
#Normality Test: qqplot
gf_qq(~painscore,data=headachelong) %>% gf_qqline()
#Equal Variance Test
leveneTest(as.factor(painscore),data=headachelong)
#Equal Variance Test
leveneTest(as.numeric(as.factor(painscore)),data=headachelong)
painscore<-as.factor(painscore)
leveneTest(painscore,data=headachelong)
painscore<-as.numeric(painscore)
leveneTest(painscore,data=headachelong)
#Quantitative Variable - Pain Score Descriptives
#Boxplots
gf_boxplot(painscore~gender,data = headachelong)
gf_boxplot(painscore~trmt,data=headachelong)
gf_boxplot(painscore~risk,data=headachelong)
#Equal Variance Test
leveneTest(painscore~gender,data=headachelong)
#Normality Test: qqplot
gf_qq(~painscore,data=headachelong) %>% gf_qqline()
#Quantitative Variable - Pain Score Descriptives
#Boxplots
gf_boxplot(painscore~gender,data = headachelong)
gf_boxplot(painscore~trmt,data=headachelong)
gf_boxplot(painscore~risk,data=headachelong)
#Equal Variance Test
leveneTest(painscore~gender,data=headachelong)
leveneTest(painscore~trtmt,data=headachelong)
#Quantitative Variable - Pain Score Descriptives
#Boxplots
gf_boxplot(painscore~gender,data = headachelong)
gf_boxplot(painscore~trmt,data=headachelong)
gf_boxplot(painscore~risk,data=headachelong)
#Equal Variance Test
leveneTest(painscore~gender,data=headachelong)
leveneTest(painscore~trmt,data=headachelong)
leveneTest(painscore~risk,data=headachelong)
#Normality Test: qqplot
gf_qq(~painscore,data=headachelong) %>% gf_qqline()
#Tally
tally(~gender,data = headachelong)
#Tally
tally(~gender,data = headachelong) #gender
tally(~trmt,data = headachelong) #treatment
tally(~risk,data = headachelong) #risk
setwd("~/Documents/Github/MA421_FinalExam")
ggline(data = headachelong, x = "gender", y = "painscore", col = "risk", add = c("mean_se"))
ggline(data = headachelong, x = "trmt", y = "painscoret", col = "risk", add = c("mean_se"))
ggline(data = headachelong, x = "gender", y = "painscore", col = "risk", add = c("mean_se"))
ggline(data = headachelong, x = "trmt", y = "painscore", col = "risk", add = c("mean_se"))
ggline(data = headachelong, x = "trmt", y = "painscore", col = "gender", add = c("mean_se"))
ggline(data = headachelong, x = "gender", y = "painscore", col = c("risk","trmt") , add = c("mean_se"))
#Tally
tally(~gender,data = headachelong) #gender
tally(~trmt,data = headachelong) #treatment
tally(~risk,data = headachelong) #risk
#Interaction plots
ggline(data = headachelong, x = "gender", y = "painscore", col = "risk", add = c("mean_se"))
ggline(data = headachelong, x = "trmt", y = "painscore", col = "risk", add = c("mean_se"))
ggline(data = headachelong, x = "trmt", y = "painscore", col = "gender", add = c("mean_se"))
#ggline(data = headachelong, x = "gender", y = "painscore", col = c("risk","trmt") , add = c("mean_se"))
painscore.m<-subset(headachelong,gender == "male")
ggline(data = headachelong, x = "trmt", y = "painscore", col = "gender", add = c("mean_se"),main=painscore.m)
painscore.m<-subset(headachelong,gender == "male")
ggline(data = headachelong, x = "trmt", y = "painscore", col = "risk", add = c("mean_se"),main=painscore.m)
painscore.m<-subset(headachelong,gender == "male")
ggline(data = painscore.m, x = "trmt", y = "painscore", col = "risk", add = c("mean_se"))
painscore.m<-subset(headachelong,gender == "male")
ggline(data = painscore.m, x = "trmt", y = "painscore", col = "gender", add = c("mean_se"))
painscore.m<-subset(headachelong,gender == "male")
ggline(data = painscore.m, x = "trmt", y = "painscore", col = "risk", add = c("mean_se"),main = "Male")
painscore.f<-subset(headachelong,gender == "female")
ggline(data = painscore.f, x = "trmt", y = "painscore", col = "risk", add = c("mean_se"),main = "Female")
painscore.x<-subset(headachelong,trmt == "X")
ggline(data = painscore.x, x = "gender", y = "painscore", col = "risk", add = c("mean_se"), main = "Treatment X")
painscore.y<-subset(headachelong,trmt == "Y")
ggline(data = painscore.y, x = "gender", y = "painscore", col = "risk", add = c("mean_se"), main = "Treatment Y")
painscore.z<-subset(headachelong,trmt == "Z")
ggline(data = painscore.z, x = "gender", y = "painscore", col = "risk", add = c("mean_se"), main = "Treatment Z")
painscore.low<-subset(headachelong,risk  == "low")
ggline(data = painscore.low, x = "gender", y = "painscore", col = "trmt", add = c("mean_se"), main = "Low Risk")
painscore.high<-subset(headachelong,risk  == "high")
ggline(data = painscore.high, x = "gender", y = "painscore", col = "trmt", add = c("mean_se"), main = "High Risk")
